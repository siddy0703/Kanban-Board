{"ast":null,"code":"var _jsxFileName = \"/Users/siddhantsingh/Documents/Basic Javascript/kanban-board/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  debugger;\n  const [tickets, setTickets] = useState([]);\n  const [groupBy, setGroupBy] = useState(\"status\"); // Default grouping by status\n  const [sortBy, setSortBy] = useState(\"priority\"); // Default sorting by priority\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\n        setTickets(response.data.tickets);\n      } catch (error) {\n        console.error(\"Error fetching tickets\", error);\n      }\n    };\n    fetchTickets();\n\n    // Restore saved state from localStorage\n    const savedGroupBy = localStorage.getItem(\"groupBy\");\n    const savedSortBy = localStorage.getItem(\"sortBy\");\n    if (savedGroupBy) setGroupBy(savedGroupBy);\n    if (savedSortBy) setSortBy(savedSortBy);\n  }, []);\n  useEffect(() => {\n    // Save the current state to localStorage\n    localStorage.setItem(\"groupBy\", groupBy);\n    localStorage.setItem(\"sortBy\", sortBy);\n  }, [groupBy, sortBy]);\n  const groupTickets = tickets => {\n    switch (groupBy) {\n      case \"status\":\n        return groupByStatus(tickets);\n      case \"user\":\n        return groupByUser(tickets);\n      case \"priority\":\n        return groupByPriority(tickets);\n      default:\n        return tickets;\n    }\n  };\n  const sortTickets = groupedTickets => {\n    return groupedTickets.map(group => ({\n      ...group,\n      tickets: group.tickets.sort((a, b) => {\n        if (sortBy === \"priority\") {\n          return b.priority - a.priority;\n        } else if (sortBy === \"title\") {\n          return a.title.localeCompare(b.title);\n        }\n        return 0;\n      })\n    }));\n  };\n  const groupedTickets = groupTickets(tickets);\n  const sortedTickets = sortTickets(groupedTickets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GroupBySelector, {\n      groupBy: groupBy,\n      setGroupBy: setGroupBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortBySelector, {\n      sortBy: sortBy,\n      setSortBy: setSortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: sortedTickets.map((group, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), group.tickets.map(ticket => /*#__PURE__*/_jsxDEV(Ticket, {\n          ticket: ticket\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Grouping functions\n_s(KanbanBoard, \"qeAmZDH5OA1SwNKWnIdGFD5HfE0=\");\n_c = KanbanBoard;\nconst groupByStatus = tickets => {\n  const grouped = {};\n  tickets.forEach(ticket => {\n    const status = ticket.status;\n    if (!grouped[status]) {\n      grouped[status] = []; // Initialize an array for this status if not present\n    }\n    grouped[status].push(ticket); // Push the current ticket into the corresponding status group\n  });\n\n  // Convert the object into an array of groups with { name, tickets } for easier rendering\n  return Object.keys(grouped).map(status => ({\n    name: status,\n    tickets: grouped[status]\n  }));\n};\nconst groupByUser = tickets => {\n  const grouped = {};\n  tickets.forEach(ticket => {\n    const user = ticket.assignedUser;\n    if (!grouped[user]) {\n      grouped[user] = []; // Initialize an array for this user if not present\n    }\n    grouped[user].push(ticket); // Push the current ticket into the corresponding user group\n  });\n\n  // Convert the object into an array of groups with { name, tickets } for easier rendering\n  return Object.keys(grouped).map(user => ({\n    name: user || \"Unassigned\",\n    // Handle cases where there might not be an assigned user\n    tickets: grouped[user]\n  }));\n};\nconst groupByPriority = tickets => {\n  const priorityLevels = {\n    4: \"Urgent\",\n    3: \"High\",\n    2: \"Medium\",\n    1: \"Low\",\n    0: \"No Priority\"\n  };\n  const grouped = {};\n  tickets.forEach(ticket => {\n    const priority = ticket.priority;\n    if (!grouped[priority]) {\n      grouped[priority] = []; // Initialize an array for this priority if not present\n    }\n    grouped[priority].push(ticket); // Push the current ticket into the corresponding priority group\n  });\n\n  // Convert the object into an array of groups with { name, tickets } for easier rendering\n  return Object.keys(grouped).map(priority => ({\n    name: priorityLevels[priority],\n    // Get the friendly name of the priority level\n    tickets: grouped[priority]\n  }));\n};\n\n// Component for ticket display\nconst Ticket = ({\n  ticket\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"ticket\",\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    children: ticket.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Priority: \", ticket.priority]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Status: \", ticket.status]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 156,\n  columnNumber: 3\n}, this);\n_c2 = Ticket;\nconst GroupBySelector = ({\n  groupBy,\n  setGroupBy\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: \"Group By: \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: groupBy,\n    onChange: e => setGroupBy(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"status\",\n      children: \"Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"user\",\n      children: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"priority\",\n      children: \"Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 164,\n  columnNumber: 3\n}, this);\n_c3 = GroupBySelector;\nconst SortBySelector = ({\n  sortBy,\n  setSortBy\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: \"Sort By: \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: sortBy,\n    onChange: e => setSortBy(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"priority\",\n      children: \"Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"title\",\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 175,\n  columnNumber: 3\n}, this);\n_c4 = SortBySelector;\nexport default KanbanBoard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"KanbanBoard\");\n$RefreshReg$(_c2, \"Ticket\");\n$RefreshReg$(_c3, \"GroupBySelector\");\n$RefreshReg$(_c4, \"SortBySelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","KanbanBoard","_s","tickets","setTickets","groupBy","setGroupBy","sortBy","setSortBy","fetchTickets","response","get","data","error","console","savedGroupBy","localStorage","getItem","savedSortBy","setItem","groupTickets","groupByStatus","groupByUser","groupByPriority","sortTickets","groupedTickets","map","group","sort","a","b","priority","title","localeCompare","sortedTickets","children","GroupBySelector","fileName","_jsxFileName","lineNumber","columnNumber","SortBySelector","className","idx","name","ticket","Ticket","id","_c","grouped","forEach","status","push","Object","keys","user","assignedUser","priorityLevels","_c2","value","onChange","e","target","_c3","_c4","$RefreshReg$"],"sources":["/Users/siddhantsingh/Documents/Basic Javascript/kanban-board/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst KanbanBoard = () => {\n  debugger\n  const [tickets, setTickets] = useState([]);\n  const [groupBy, setGroupBy] = useState(\"status\"); // Default grouping by status\n  const [sortBy, setSortBy] = useState(\"priority\"); // Default sorting by priority\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\n        setTickets(response.data.tickets);\n      } catch (error) {\n        console.error(\"Error fetching tickets\", error);\n      }\n    };\n    fetchTickets();\n    \n    // Restore saved state from localStorage\n    const savedGroupBy = localStorage.getItem(\"groupBy\");\n    const savedSortBy = localStorage.getItem(\"sortBy\");\n    if (savedGroupBy) setGroupBy(savedGroupBy);\n    if (savedSortBy) setSortBy(savedSortBy);\n  }, []);\n\n  useEffect(() => {\n    // Save the current state to localStorage\n    localStorage.setItem(\"groupBy\", groupBy);\n    localStorage.setItem(\"sortBy\", sortBy);\n  }, [groupBy, sortBy]);\n\n  const groupTickets = (tickets) => {\n    switch (groupBy) {\n      case \"status\":\n        return groupByStatus(tickets);\n      case \"user\":\n        return groupByUser(tickets);\n      case \"priority\":\n        return groupByPriority(tickets);\n      default:\n        return tickets;\n    }\n  };\n\n  const sortTickets = (groupedTickets) => {\n    return groupedTickets.map(group => ({\n      ...group,\n      tickets: group.tickets.sort((a, b) => {\n        if (sortBy === \"priority\") {\n          return b.priority - a.priority;\n        } else if (sortBy === \"title\") {\n          return a.title.localeCompare(b.title);\n        }\n        return 0;\n      })\n    }));\n  };\n\n  const groupedTickets = groupTickets(tickets);\n  const sortedTickets = sortTickets(groupedTickets);\n\n  return (\n    <div>\n      <GroupBySelector groupBy={groupBy} setGroupBy={setGroupBy} />\n      <SortBySelector sortBy={sortBy} setSortBy={setSortBy} />\n      <div className=\"kanban-board\">\n        {sortedTickets.map((group, idx) => (\n          <div key={idx} className=\"kanban-column\">\n            <h3>{group.name}</h3>\n            {group.tickets.map(ticket => (\n              <Ticket key={ticket.id} ticket={ticket} />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Grouping functions\nconst groupByStatus = (tickets) => {\n  const grouped = {};\n\n  tickets.forEach((ticket) => {\n    const status = ticket.status;\n\n    if (!grouped[status]) {\n      grouped[status] = []; // Initialize an array for this status if not present\n    }\n\n    grouped[status].push(ticket); // Push the current ticket into the corresponding status group\n  });\n\n  // Convert the object into an array of groups with { name, tickets } for easier rendering\n  return Object.keys(grouped).map((status) => ({\n    name: status,\n    tickets: grouped[status],\n  }));\n};\n\n\nconst groupByUser = (tickets) => {\n  const grouped = {};\n\n  tickets.forEach((ticket) => {\n    const user = ticket.assignedUser;\n\n    if (!grouped[user]) {\n      grouped[user] = []; // Initialize an array for this user if not present\n    }\n\n    grouped[user].push(ticket); // Push the current ticket into the corresponding user group\n  });\n\n  // Convert the object into an array of groups with { name, tickets } for easier rendering\n  return Object.keys(grouped).map((user) => ({\n    name: user || \"Unassigned\", // Handle cases where there might not be an assigned user\n    tickets: grouped[user],\n  }));\n};\n\n\nconst groupByPriority = (tickets) => {\n  const priorityLevels = {\n    4: \"Urgent\",\n    3: \"High\",\n    2: \"Medium\",\n    1: \"Low\",\n    0: \"No Priority\",\n  };\n\n  const grouped = {};\n\n  tickets.forEach((ticket) => {\n    const priority = ticket.priority;\n\n    if (!grouped[priority]) {\n      grouped[priority] = []; // Initialize an array for this priority if not present\n    }\n\n    grouped[priority].push(ticket); // Push the current ticket into the corresponding priority group\n  });\n\n  // Convert the object into an array of groups with { name, tickets } for easier rendering\n  return Object.keys(grouped).map((priority) => ({\n    name: priorityLevels[priority], // Get the friendly name of the priority level\n    tickets: grouped[priority],\n  }));\n};\n\n\n// Component for ticket display\nconst Ticket = ({ ticket }) => (\n  <div className=\"ticket\">\n    <h4>{ticket.title}</h4>\n    <p>Priority: {ticket.priority}</p>\n    <p>Status: {ticket.status}</p>\n  </div>\n);\n\nconst GroupBySelector = ({ groupBy, setGroupBy }) => (\n  <div>\n    <label>Group By: </label>\n    <select value={groupBy} onChange={e => setGroupBy(e.target.value)}>\n      <option value=\"status\">Status</option>\n      <option value=\"user\">User</option>\n      <option value=\"priority\">Priority</option>\n    </select>\n  </div>\n);\n\nconst SortBySelector = ({ sortBy, setSortBy }) => (\n  <div>\n    <label>Sort By: </label>\n    <select value={sortBy} onChange={e => setSortBy(e.target.value)}>\n      <option value=\"priority\">Priority</option>\n      <option value=\"title\">Title</option>\n    </select>\n  </div>\n);\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}